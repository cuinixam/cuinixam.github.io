# Target Dependencies Documentation

## Styles

<style>
.dependency-tree {
    font-family: monospace;
    background: #f8f9fa;
    border: 1px solid #e9ecef;
    border-radius: 4px;
    padding: 10px;
    margin: 10px 0;
}
.dependency-tree details {
    margin-left: 10px;
}
.dependency-tree summary {
    cursor: pointer;
    padding: 2px 0;
}
.dependency-tree summary:hover {
    background-color: #e9ecef;
}
.dependency-tree ul {
    margin: 5px 0;
    padding-left: 20px;
}
.dependency-tree li {
    margin: 2px 0;
    list-style-type: none;
}
.dependency-tree strong {
    color: #0066cc;
}
.dependency-tree em {
    color: #666;
}
.dependency-tree code {
    background-color: #f1f3f4;
    color: #333;
    padding: 1px 4px;
    border-radius: 3px;
    font-family: 'Courier New', monospace;
}
.target-info {
    background: #f8f9fa;
    border-left: 4px solid #0066cc;
    padding: 10px;
    margin: 10px 0;
}
.target-info ul {
    margin: 5px 0;
    padding-left: 20px;
}
.target-info li {
    margin: 2px 0;
}
</style>

## Summary

- **Total targets**: 111
- **Root targets (CMakeCustomTargets only)**: 3

This document provides an overview of CMake custom target dependencies. Only CMakeCustomTargets are shown as root targets.

## Root Targets (CMakeCustomTargets)

These are the main CMakeCustomTargets that are not dependencies of other targets.

### report

**Description:** Run sphinx build for variant Disco

**Type:** CUSTOM_TARGET

**Dependencies:**

<div class="dependency-tree">
<ul>
<li><details><summary><strong>report</strong></summary><ul><li><strong>Description:</strong> Run sphinx build for variant Disco</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>results</strong></summary><ul><li><strong>Description:</strong> Run all targets for all component results for Disco</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>rte_results</strong></summary><ul><li><strong>Description:</strong> Execute targets to get all results for component rte</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>rte_lint</strong></summary><ul><li><strong>Description:</strong> Lint the rte component</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/rte/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/rte/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/rte/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for component rte</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/rte/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/rte/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/rte/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>rte_docs</strong></summary><ul><li><strong>Description:</strong> Generate sources docs for component rte</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/rte/rte.c.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/compile_commands.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>spled_results</strong></summary><ul><li><strong>Description:</strong> Execute targets to get all results for component spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>spled_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled</strong></summary><ul><li><strong>Description:</strong> Executable target: spled</li><li><strong>Outputs:</strong><ul><li><code>spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/spled/test/test_spled.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>spled_lint</strong></summary><ul><li><strong>Description:</strong> Lint the spled component</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/spled/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for component spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/spled/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>spled_docs</strong></summary><ul><li><strong>Description:</strong> Generate sources docs for component spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled.c.md</code></li><li><code>${CMAKE_BUILD_DIR}/spled/test_spled.cc.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/compile_commands.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>power_signal_processing_results</strong></summary><ul><li><strong>Description:</strong> Execute targets to get all results for component power_signal_processing</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>power_signal_processing_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for power_signal_processing</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing</strong></summary><ul><li><strong>Description:</strong> Executable target: power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_signal_processing/test/test_power_signal_processing.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>power_signal_processing_lint</strong></summary><ul><li><strong>Description:</strong> Lint the power_signal_processing component</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for component power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>power_signal_processing_docs</strong></summary><ul><li><strong>Description:</strong> Generate sources docs for component power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing.c.md</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/test_power_signal_processing.cc.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/compile_commands.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>light_controller_results</strong></summary><ul><li><strong>Description:</strong> Execute targets to get all results for component light_controller</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>light_controller_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for light_controller</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component light_controller</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller</strong></summary><ul><li><strong>Description:</strong> Executable target: light_controller</li><li><strong>Outputs:</strong><ul><li><code>light_controller</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/light_controller/test/test_light_controller.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>light_controller_lint</strong></summary><ul><li><strong>Description:</strong> Lint the light_controller component</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for component light_controller</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>light_controller_docs</strong></summary><ul><li><strong>Description:</strong> Generate sources docs for component light_controller</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller.c.md</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/test_light_controller.cc.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/compile_commands.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>power_button_results</strong></summary><ul><li><strong>Description:</strong> Execute targets to get all results for component power_button</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>power_button_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for power_button</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_button</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button</strong></summary><ul><li><strong>Description:</strong> Executable target: power_button</li><li><strong>Outputs:</strong><ul><li><code>power_button</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_button/test/test_power_button.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>power_button_lint</strong></summary><ul><li><strong>Description:</strong> Lint the power_button component</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for component power_button</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>power_button_docs</strong></summary><ul><li><strong>Description:</strong> Generate sources docs for component power_button</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button.c.md</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/test_power_button.cc.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/compile_commands.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>main_control_knob_results</strong></summary><ul><li><strong>Description:</strong> Execute targets to get all results for component main_control_knob</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>main_control_knob_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for main_control_knob</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob</strong></summary><ul><li><strong>Description:</strong> Executable target: main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/main_control_knob/test/test_main_control_knob.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>main_control_knob_lint</strong></summary><ul><li><strong>Description:</strong> Lint the main_control_knob component</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for component main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>main_control_knob_docs</strong></summary><ul><li><strong>Description:</strong> Generate sources docs for component main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob.c.md</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/test_main_control_knob.cc.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/compile_commands.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>test_integrations_spled_results</strong></summary><ul><li><strong>Description:</strong> Execute targets to get all results for component test_integrations_spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/report_config.json</code> <em>(external)</em></li><li><details><summary><strong>test_integrations_spled_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for test_integrations_spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled</strong></summary><ul><li><strong>Description:</strong> Executable target: test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>D:/ateliere/spledy/components/spled/test/test_spled_integration.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>test_integrations_spled_lint</strong></summary><ul><li><strong>Description:</strong> Lint the test_integrations_spled component</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for component test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/compile_commands.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>test_integrations_spled_docs</strong></summary><ul><li><strong>Description:</strong> Generate sources docs for component test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_spled_integration.cc.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/compile_commands.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>coverage</strong></summary><ul><li><strong>Description:</strong> Generate variant coverage report</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for the variant</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/spled</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_signal_processing</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/light_controller</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_button</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/main_control_knob</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/test_integrations_spled</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled</strong></summary><ul><li><strong>Description:</strong> Executable target: spled</li><li><strong>Outputs:</strong><ul><li><code>spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/spled/test/test_spled.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing</strong></summary><ul><li><strong>Description:</strong> Executable target: power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_signal_processing/test/test_power_signal_processing.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component light_controller</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller</strong></summary><ul><li><strong>Description:</strong> Executable target: light_controller</li><li><strong>Outputs:</strong><ul><li><code>light_controller</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/light_controller/test/test_light_controller.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_button</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button</strong></summary><ul><li><strong>Description:</strong> Executable target: power_button</li><li><strong>Outputs:</strong><ul><li><code>power_button</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_button/test/test_power_button.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob</strong></summary><ul><li><strong>Description:</strong> Executable target: main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/main_control_knob/test/test_main_control_knob.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled</strong></summary><ul><li><strong>Description:</strong> Executable target: test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>D:/ateliere/spledy/components/spled/test/test_spled_integration.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component spled to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>spled_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled</strong></summary><ul><li><strong>Description:</strong> Executable target: spled</li><li><strong>Outputs:</strong><ul><li><code>spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/spled/test/test_spled.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component power_signal_processing to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_signal_processing</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>power_signal_processing_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for power_signal_processing</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing</strong></summary><ul><li><strong>Description:</strong> Executable target: power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_signal_processing/test/test_power_signal_processing.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component light_controller to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/light_controller</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>light_controller_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for light_controller</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component light_controller</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller</strong></summary><ul><li><strong>Description:</strong> Executable target: light_controller</li><li><strong>Outputs:</strong><ul><li><code>light_controller</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/light_controller/test/test_light_controller.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component power_button to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_button</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>power_button_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for power_button</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_button</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button</strong></summary><ul><li><strong>Description:</strong> Executable target: power_button</li><li><strong>Outputs:</strong><ul><li><code>power_button</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_button/test/test_power_button.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component main_control_knob to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/main_control_knob</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>main_control_knob_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for main_control_knob</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob</strong></summary><ul><li><strong>Description:</strong> Executable target: main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/main_control_knob/test/test_main_control_knob.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component test_integrations_spled to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/test_integrations_spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>test_integrations_spled_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for test_integrations_spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled</strong></summary><ul><li><strong>Description:</strong> Executable target: test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>D:/ateliere/spledy/components/spled/test/test_spled_integration.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>targets_data</strong></summary><ul><li><strong>Description:</strong> Generate targets data report</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/targets_data.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate variant targets data documentation</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/targets_data.md</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/targets_data.json</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li>
</ul>
</div>

### coverage

**Description:** Generate variant coverage report

**Type:** CUSTOM_TARGET

**Dependencies:**

<div class="dependency-tree">
<ul>
<li><details><summary><strong>coverage</strong></summary><ul><li><strong>Description:</strong> Generate variant coverage report</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for the variant</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/spled</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_signal_processing</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/light_controller</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_button</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/main_control_knob</code></li><li><code>${CMAKE_BUILD_DIR}/reports/coverage/test_integrations_spled</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled</strong></summary><ul><li><strong>Description:</strong> Executable target: spled</li><li><strong>Outputs:</strong><ul><li><code>spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/spled/test/test_spled.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing</strong></summary><ul><li><strong>Description:</strong> Executable target: power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_signal_processing/test/test_power_signal_processing.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component light_controller</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller</strong></summary><ul><li><strong>Description:</strong> Executable target: light_controller</li><li><strong>Outputs:</strong><ul><li><code>light_controller</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/light_controller/test/test_light_controller.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_button</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button</strong></summary><ul><li><strong>Description:</strong> Executable target: power_button</li><li><strong>Outputs:</strong><ul><li><code>power_button</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_button/test/test_power_button.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob</strong></summary><ul><li><strong>Description:</strong> Executable target: main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/main_control_knob/test/test_main_control_knob.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled</strong></summary><ul><li><strong>Description:</strong> Executable target: test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>D:/ateliere/spledy/components/spled/test/test_spled_integration.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component spled to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>spled_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/spled/reports/coverage/spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled</strong></summary><ul><li><strong>Description:</strong> Executable target: spled</li><li><strong>Outputs:</strong><ul><li><code>spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/spled/test/test_spled.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/spled/mockup_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/spled/spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: spled_PC</li><li><strong>Outputs:</strong><ul><li><code>spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\spled\src\spled.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component power_signal_processing to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_signal_processing</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>power_signal_processing_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for power_signal_processing</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/reports/coverage/power_signal_processing/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing</strong></summary><ul><li><strong>Description:</strong> Executable target: power_signal_processing</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_signal_processing/test/test_power_signal_processing.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_signal_processing/mockup_power_signal_processing.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_signal_processing/power_signal_processing_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_signal_processing_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_signal_processing_PC</li><li><strong>Outputs:</strong><ul><li><code>power_signal_processing_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component light_controller to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/light_controller</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>light_controller_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for light_controller</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component light_controller</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/light_controller/reports/coverage/light_controller/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller</strong></summary><ul><li><strong>Description:</strong> Executable target: light_controller</li><li><strong>Outputs:</strong><ul><li><code>light_controller</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/light_controller/test/test_light_controller.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/light_controller/mockup_light_controller.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/light_controller/light_controller_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>light_controller_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: light_controller_PC</li><li><strong>Outputs:</strong><ul><li><code>light_controller_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component power_button to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/power_button</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>power_button_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for power_button</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component power_button</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/power_button/reports/coverage/power_button/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button</strong></summary><ul><li><strong>Description:</strong> Executable target: power_button</li><li><strong>Outputs:</strong><ul><li><code>power_button</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/power_button/test/test_power_button.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/power_button/mockup_power_button.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/power_button/power_button_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>power_button_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: power_button_PC</li><li><strong>Outputs:</strong><ul><li><code>power_button_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\power_button\src\power_button.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component main_control_knob to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/main_control_knob</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>main_control_knob_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for main_control_knob</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/main_control_knob/reports/coverage/main_control_knob/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob</strong></summary><ul><li><strong>Description:</strong> Executable target: main_control_knob</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/components/main_control_knob/test/test_main_control_knob.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/main_control_knob/mockup_main_control_knob.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/main_control_knob/main_control_knob_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>main_control_knob_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: main_control_knob_PC</li><li><strong>Outputs:</strong><ul><li><code>main_control_knob_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>d:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Copy coverage html report for component test_integrations_spled to variant report directory</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage/test_integrations_spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li><li><details><summary><strong>test_integrations_spled_coverage</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for test_integrations_spled</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Generate coverage report for component test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/gcovr.cfg</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/coverage.json</code></li><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/reports/coverage/test_integrations_spled/index.html</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run the test executable, generate JUnit report and return success independent of the test result</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_junit.xml</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled</strong></summary><ul><li><strong>Description:</strong> Executable target: test_integrations_spled</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>GTest::gtest_main</code> <em>(external)</em></li><li><code>GTest::gmock_main</code> <em>(external)</em></li><li><code>pthread</code> <em>(external)</em></li><li><code>D:/ateliere/spledy/components/spled/test/test_spled_integration.cc</code> <em>(external)</em></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run clanguru to generate mockup sources</li><li><strong>Outputs:</strong><ul><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.log</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.h</code></li><li><code>d:/ateliere/spledy/.yanga/build/Disco/gtest/test_integrations_spled/mockup_test_integrations_spled.cc</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create partial link library containing only the productive sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/test_integrations_spled/test_integrations_spled_PC.o</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><details><summary><strong>test_integrations_spled_PC_lib</strong></summary><ul><li><strong>Description:</strong> Object library: test_integrations_spled_PC</li><li><strong>Outputs:</strong><ul><li><code>test_integrations_spled_PC_lib</code></li></ul></li><li><strong>Dependencies:</strong><ul><li><code>D:\ateliere\spledy\components\spled\src\spled.c</code></li><li><code>D:\ateliere\spledy\components\rte\src\rte.c</code></li><li><code>D:\ateliere\spledy\components\brightness_controller\src\brightness_controller.c</code></li><li><code>D:\ateliere\spledy\components\light_controller\src\light_controller.c</code></li><li><code>D:\ateliere\spledy\components\main_control_knob\src\main_control_knob.c</code></li><li><code>D:\ateliere\spledy\components\power_button\src\power_button.c</code></li><li><code>D:\ateliere\spledy\components\power_signal_processing\src\power_signal_processing.c</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Create coverage report directories</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/reports/coverage</code></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li></ul></li></ul></details></li>
</ul>
</div>

### lint

**Description:** Lint the entire variant

**Type:** CUSTOM_TARGET

**Dependencies:**

<div class="dependency-tree">
<ul>
<li><details><summary><strong>lint</strong></summary><ul><li><strong>Description:</strong> Lint the entire variant</li><li><strong>Dependencies:</strong><ul><li><code>${CMAKE_BUILD_DIR}/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/cppcheck_report.md</code></li><li><details><summary><strong>custom command</strong></summary><ul><li><strong>Description:</strong> Run cppcheck for all sources</li><li><strong>Outputs:</strong><ul><li><code>${CMAKE_BUILD_DIR}/cppcheck_report.xml</code></li><li><code>${CMAKE_BUILD_DIR}/cppcheck_report.md</code></li></ul></li></ul></details></li></ul></li></ul></details></li>
</ul>
</div>
